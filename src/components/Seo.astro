---
export interface Props {
	title?: string;
	description?: string;
	image?: string;
	article?: boolean;
	publishDate?: Date;
	tags?: string[];
}

const {
	title = 'Securing the Realm',
	description = 'Cybersecurity, Azure innovation, and Microsoft AI converge with the enchanting world of tabletop games.',
	image = '/str-logo.png',
	article = false,
	publishDate,
	tags = [],
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const fullTitle = title === 'Securing the Realm' ? title : `${title} - Securing the Realm`;
const socialImage = new URL(image, Astro.site);

// JSON-LD for organization
const organizationSchema = {
	'@context': 'https://schema.org',
	'@type': 'Organization',
	name: 'Securing the Realm',
	url: Astro.site,
	logo: socialImage,
	description:
		'Cybersecurity, Azure innovation, and Microsoft AI education through fantasy storytelling',
	sameAs: [
		'https://www.youtube.com/@SecuringTheRealm',
		'https://github.com/SecuringTheRealm',
		'https://www.linkedin.com/company/securing-the-realm',
	],
};

// JSON-LD for article (if applicable)
const articleSchema = article
	? {
			'@context': 'https://schema.org',
			'@type': 'BlogPosting',
			headline: title,
			description: description,
			image: socialImage,
			datePublished: publishDate?.toISOString(),
			author: {
				'@type': 'Organization',
				name: 'Securing the Realm',
			},
			publisher: {
				'@type': 'Organization',
				name: 'Securing the Realm',
				logo: {
					'@type': 'ImageObject',
					url: socialImage,
				},
			},
			keywords: tags.join(', '),
		}
	: null;
---

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={article ? 'article' : 'website'} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={fullTitle} />
<meta property="og:description" content={description} />
<meta property="og:image" content={socialImage} />
<meta property="og:site_name" content="Securing the Realm" />

{article && publishDate && (
  <meta property="article:published_time" content={publishDate.toISOString()} />
)}

{tags.length > 0 && tags.map(tag => (
  <meta property="article:tag" content={tag} />
))}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={fullTitle} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={socialImage} />

<!-- JSON-LD -->
<script is:inline type="application/ld+json" set:html={JSON.stringify(organizationSchema)} />
{articleSchema && (
  <script is:inline type="application/ld+json" set:html={JSON.stringify(articleSchema)} />
)}
